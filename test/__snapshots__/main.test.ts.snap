// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "APIEndpoint1793E782": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "API62EA1CFF",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "APIDeploymentStageprod278E75BA",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "API62EA1CFF": {
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL",
          ],
        },
        "Name": {
          "Ref": "AWS::StackName",
        },
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "APIAccountD065B313": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "API62EA1CFF",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "APICloudWatchRole927CEB3B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "APICloudWatchRole927CEB3B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "APIDeployment0E06874Eaf2517c48824d6eaa68dc483f4eb772f": {
      "DependsOn": [
        "APImetricsPOST43689392",
        "APImetrics6702B47E",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "API62EA1CFF",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "APIDeploymentStageprod278E75BA": {
      "DependsOn": [
        "APIAccountD065B313",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "APIDeployment0E06874Eaf2517c48824d6eaa68dc483f4eb772f",
        },
        "RestApiId": {
          "Ref": "API62EA1CFF",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "APImetrics6702B47E": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "API62EA1CFF",
            "RootResourceId",
          ],
        },
        "PathPart": "metrics",
        "RestApiId": {
          "Ref": "API62EA1CFF",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APImetricsPOST43689392": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "IntegrationRole35EAE287",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
            },
            {
              "StatusCode": "400",
            },
            {
              "StatusCode": "500",
            },
          ],
          "RequestParameters": {
            "integration.request.header.Content-Type": "'application/x-www-form-urlencoded'",
          },
          "RequestTemplates": {
            "application/json": "Action=SendMessage&MessageBody=$input.body",
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region",
                },
                ":sqs:path/undefined/",
                {
                  "Fn::GetAtt": [
                    "Queue4A7E3555",
                    "QueueName",
                  ],
                },
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": "400",
          },
          {
            "StatusCode": "200",
          },
          {
            "StatusCode": "500",
          },
        ],
        "ResourceId": {
          "Ref": "APImetrics6702B47E",
        },
        "RestApiId": {
          "Ref": "API62EA1CFF",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "IntegrationRole35EAE287": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "IntegrationRoleDefaultPolicy99182A66": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Queue4A7E3555",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "IntegrationRoleDefaultPolicy99182A66",
        "Roles": [
          {
            "Ref": "IntegrationRole35EAE287",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Queue4A7E3555": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsMasterKeyId": "alias/aws/sqs",
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "QueueProcessor57F09983": {
      "DependsOn": [
        "QueueProcessorServiceRoleDefaultPolicy6F114973",
        "QueueProcessorServiceRoleE1C9019B",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e5cd280ca23f3dde6223b996fbe817ef5a57b9644818f96592ef811d8b902394.zip",
        },
        "Description": "Message processor for Slack App",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "QueueProcessorServiceRoleE1C9019B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueueProcessorServiceRoleDefaultPolicy6F114973": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Queue4A7E3555",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "QueueProcessorServiceRoleDefaultPolicy6F114973",
        "Roles": [
          {
            "Ref": "QueueProcessorServiceRoleE1C9019B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QueueProcessorServiceRoleE1C9019B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "QueueProcessorSqsEventSourcetestQueue6AD77D9DB74DA3D5": {
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "Queue4A7E3555",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "QueueProcessor57F09983",
        },
        "ScalingConfig": {
          "MaximumConcurrency": 10,
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
